// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4537.Steam2017V21.subsystems;

import org.usfirst.frc4537.Steam2017V21.RobotMap;
import org.usfirst.frc4537.Steam2017V21.commands.*;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Pneumatics extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    private final static Compressor compressor = RobotMap.compressor;
    private final static Solenoid ramp = RobotMap.rampSolenoid;
    private final static Solenoid flippers = RobotMap.flippersSolenoid;
    
    public static boolean compressorEnabled = true;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
    	// Set the default command for a subsystem here.
    	// setDefaultCommand(new MySpecialCommand());
    }
    
    public static void compressorStart() {
    	compressor.start();
    }
    
    public static void compressorStop() {
    	compressor.stop();
    }
    
    public static boolean compressorGetMode() {
    	return compressor.getClosedLoopControl();
    }
    
    public static void rampToggle() {
    	ramp.set(!ramp.get());
    }
    
    public static void flippersToggle() {
    	flippers.set(!flippers.get());
    }
    
    public static boolean rampGetState() {
    	return ramp.get();
    }
    
    public static boolean flippersGetState() {
    	return flippers.get();
    }
}
